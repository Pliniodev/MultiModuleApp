plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion(ConfigData.compileSdkVersion)

    defaultConfig {
        applicationId "feature.multimoduleapp"
        minSdk(ConfigData.minSdkVersion)
        targetSdk(ConfigData.targetSdkVersion)
        versionCode(ConfigData.versionCode)
        versionName(ConfigData.versionName)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures{
        viewBinding true
    }
}

dependencies {
    implementation project(path: ':feature-commons')
    implementation project(path: ':feature-bills-to-pay')
    implementation project(path: ':feature-ricky')
    implementation project(path: ':feature-examples')
    implementation project(path: ':feature-dogs')
    implementation project(path: ':feature-jsonplaceholder')

    implementation Dependencies.glide
    kapt Dependencies.glideCompiler
    AndroidModule.main.forEach {implementation it }
    TestModule.main.forEach {testImplementation it }
    AndroidTestModule.main.forEach {androidTestImplementation it }

    implementation Dependencies.room
    kapt Dependencies.dataBindingCompiler
    kapt Dependencies.roomCompiler

    DiModule.main.forEach { implementation it }
    NetworkDepModule.withCoroutines.forEach { implementation it }
}